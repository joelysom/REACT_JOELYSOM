{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aluno\\\\Documents\\\\react-JAVASCRIPT\\\\contador-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport io from 'socket.io-client';\n\n// Conectando-se ao servidor Socket.IO (substitua localhost pelo IP do servidor se necess치rio)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3001'); // Substitua localhost pelo IP do servidor se necess치rio\n\nfunction App() {\n  _s();\n  const [name, setName] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n\n  // Carregar as mensagens do servidor quando o cliente se conecta\n  useEffect(() => {\n    // Escutando o evento de carregamento das mensagens\n    socket.on('load-messages', messages => {\n      setMessages(messages);\n    });\n\n    // Escutando as novas mensagens\n    socket.on('receive-message', message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n\n    // Limpar eventos ao desmontar o componente\n    return () => {\n      socket.off('load-messages');\n      socket.off('receive-message');\n    };\n  }, []);\n\n  // Enviar uma nova mensagem para o servidor\n  const handleSendMessage = () => {\n    if (message.trim() !== '') {\n      const newMessage = {\n        name,\n        message\n      };\n\n      // Envia a mensagem para o servidor\n      socket.emit('send-message', newMessage);\n      setMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Chat App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-body\",\n      children: messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"message-name\",\n          children: [msg.name, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"message-text\",\n          children: msg.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, msg.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Digite seu nome...\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        className: \"input-name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Digite sua mensagem...\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        className: \"input-message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        className: \"send-button\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"unl8KltnJG+G8c01A9usWkCFWVw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","App","_s","name","setName","message","setMessage","messages","setMessages","on","prevMessages","off","handleSendMessage","trim","newMessage","emit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","id","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Aluno/Documents/react-JAVASCRIPT/contador-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport io from 'socket.io-client';\n\n// Conectando-se ao servidor Socket.IO (substitua localhost pelo IP do servidor se necess치rio)\nconst socket = io('http://localhost:3001'); // Substitua localhost pelo IP do servidor se necess치rio\n\nfunction App() {\n  const [name, setName] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n\n  // Carregar as mensagens do servidor quando o cliente se conecta\n  useEffect(() => {\n    // Escutando o evento de carregamento das mensagens\n    socket.on('load-messages', (messages) => {\n      setMessages(messages);\n    });\n\n    // Escutando as novas mensagens\n    socket.on('receive-message', (message) => {\n      setMessages((prevMessages) => [...prevMessages, message]);\n    });\n\n    // Limpar eventos ao desmontar o componente\n    return () => {\n      socket.off('load-messages');\n      socket.off('receive-message');\n    };\n  }, []);\n\n  // Enviar uma nova mensagem para o servidor\n  const handleSendMessage = () => {\n    if (message.trim() !== '') {\n      const newMessage = { name, message };\n\n      // Envia a mensagem para o servidor\n      socket.emit('send-message', newMessage);\n\n      setMessage('');\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      {/* Header */}\n      <div className=\"chat-header\">\n        <h1>Chat App</h1>\n      </div>\n\n      {/* Chat Body */}\n      <div className=\"chat-body\">\n        {messages.map((msg) => (\n          <div key={msg.id} className=\"message\">\n            <span className=\"message-name\">{msg.name}:</span>\n            <span className=\"message-text\">{msg.message}</span>\n          </div>\n        ))}\n      </div>\n\n      {/* Chat Input */}\n      <div className=\"chat-footer\">\n        <input\n          type=\"text\"\n          placeholder=\"Digite seu nome...\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          className=\"input-name\"\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Digite sua mensagem...\"\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n          className=\"input-message\"\n        />\n        <button onClick={handleSendMessage} className=\"send-button\">\n          Enviar\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}